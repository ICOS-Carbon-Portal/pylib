[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "icoscp"
dynamic = ["version"]
description = "Access to ICOS data objects hosted at https://data.icos-cp.eu"
readme = "README.md"

authors = [
    {name = "Claudio D'Onofrio", email = "claudio.donofrio@nateko.lu.se"},
    {name = "Zois Zogopoulos", email = "zois.zogopoulos@nateko.lu.se"},
    {name = "Anders Dahlner", email = "anders.dahlner@nateko.lu.se"},
    {name = "ICOS Carbon Portal", email = "info@icos-cp.eu"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Utilities",
]

requires-python = ">=3.7"
dependencies = [
    "pandas",
    "requests",
    "tqdm",
    "folium",
]


[project.urls]
"Homepage" = "https://www.icos-cp.eu/"
"Source" = "https://github.com/ICOS-Carbon-Portal/pylib"
"Documentation" = "https://icos-carbon-portal.github.io/pylib/"
"DataPortal" =  "https://data.icos-cp.eu/portal/"
"SparqlEndpoint" = "https://meta.icos-cp.eu/sparqlclient/?type=CSV"

[tool.hatch.version]
path = "icoscp/__init__.py"

# include_package_data=True,
# data_files=[("icoscp/.", ["icoscp/countries.json"])],
# long_description=readme(),
# long_description_content_type="text/markdown",

# HATCH - Default environment
# Used to run lint, coverage and testing using the default environment.
[tool.hatch.envs.default]
dependencies = [
  # make sure we install the "[toml]" extra so that coverage picks
  # configuration from pyproject.toml.
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.default.scripts]
test = "pytest -s --cov -vv {args}"
covhtml = [
    "coverage html",
    "python3 -m webbrowser htmlcov/index.html",
]
clean = [
    "rm -f .coverage",
    "rm -rf htmlcov/",
    "rm -rf dist"
]



# PYTEST
[tool.pytest.ini_option]
testpaths = ["tests"]


# COVERAGE
[tool.coverage.run]
branch = true
parallel = true
source = ["icoscp", "tests"]
