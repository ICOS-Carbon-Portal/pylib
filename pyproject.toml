[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "icoscp"
dynamic = ["version"]
description = "Access to ICOS data objects hosted at https://data.icos-cp.eu"
readme = "README.md"

authors = [
    {name = "Claudio D'Onofrio", email = "claudio.donofrio@nateko.lu.se"},
    {name = "Zois Zogopoulos", email = "zois.zogopoulos@nateko.lu.se"},
    {name = "Anders Dahlner", email = "anders.dahlner@nateko.lu.se"},
    {name = "ICOS Carbon Portal", email = "info@icos-cp.eu"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Utilities",
]

requires-python = ">=3.7"
dependencies = [
    "pandas",
    "requests",
    "tqdm",
    "folium",
]


[project.urls]
Homepage = "https://www.icos-cp.eu/"
Source = "https://github.com/ICOS-Carbon-Portal/pylib"
Documentation = "https://icos-carbon-portal.github.io/pylib/"
DataPortal = "https://data.icos-cp.eu/portal/"
SparqlEndpoint = "https://meta.icos-cp.eu/sparqlclient/?type=CSV"

[tool.hatch.version]
path = "src/icoscp/__init__.py"


# FIXME: Right now countries.json is included in the wheel.
# However, the preferred way would be to use "shared-data", see
# https://github.com/pypa/hatch/issues/773 for more details.
# Below are the old instructions for packaging countries.json
# include_package_data=True,
# data_files=[("icoscp/.", ["icoscp/countries.json"])],


# The default hatch environment, used to run testing and coverage, and to build
# documentation.
[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
  "mkdocs"
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
cov = "coverage run -m pytest {args:tests}"
covhtml = [
  "coverage combine",
  "coverage html",
  "python3 -m webbrowser htmlcov/index.html",
]
clean = [
  "rm -f .coverage*",
  "rm -rf htmlcov/",
  "rm -rf dist"
]


# The second hatch environment is used for linting.
[tool.hatch.envs.lint]
detached = true
dependencies = [
  "ruff>=0.0.263",
]
[tool.hatch.envs.lint.scripts]
style = [
  "ruff {args:.}",
]

# The third hatch environment does multi-version python testing.
[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.test.scripts]
all = "coverage run -m pytest {args:tests}"


# Tool configuration.
[tool.pytest.ini_option]
testpaths = ["tests"]

[tool.coverage.run]
disable_warnings = ['no-data-collected']
branch = true
parallel = true
source = ["src/icoscp"]
omit = ["tests"]

[tool.ruff]
target-version = "py39"
# FIXE: Change once the code has been reformatted.
line-length = 120
ignore = [
  "E101",
]
